#error_log stderr info;
error_log /var/log/nginx/error.log debug;


upstream client {
    server client:3000;
}

upstream api {
    server api:9000;
}


server {
	listen 8080 ssl;
	#server_name localhost;	

	ssl_certificate     /etc/nginx/nginx-selfsigned.crt;
	ssl_certificate_key /etc/nginx/nginx-selfsigned.key;
	    	
	ssl_protocols TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_dhparam /etc/nginx/dhparam.pem;
	ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
	ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
	ssl_session_timeout  10m;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off; # Requires nginx >= 1.5.9
	
	# ssl_stapling on; # Requires nginx >= 1.3.7
	# ssl_stapling_verify on; # Requires nginx => 1.3.7
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	
    #root /www/data;
    #index index.html index.htm index.nginx-debian.html;

    location / {
            proxy_pass http://client;
            proxy_set_header    Authorization $http_authorization;
            proxy_pass_header   Authorization;
        }

        location /sockjs-node {
            proxy_pass http://client;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header X-SSL-Client-Certificate    $ssl_client_escaped_cert;
            proxy_set_header    Authorization $http_authorization;
            proxy_pass_header   Authorization;
        }

        location /graphql {
            proxy_pass http://api;
            proxy_set_header X-Subject-DN $ssl_client_s_dn;
            proxy_set_header    X-SSL-Client-Certificate    $ssl_client_escaped_cert;
            proxy_set_header    Authorization $http_authorization;
            proxy_pass_header   Authorization;
        }

        location /api {
            proxy_pass http://api;
            proxy_set_header X-Subject-DN $ssl_client_s_dn;
            proxy_set_header X-SSL-Client-Certificate    $ssl_client_escaped_cert;
            proxy_set_header    Authorization $http_authorization;
            proxy_pass_header   Authorization;
    }
}

server {
    	listen 443 ssl;
    	# server_name app;

    	ssl_certificate     /etc/nginx/certificate.pem;
    	ssl_certificate_key /etc/nginx/key.pem;
    	ssl_protocols       TLSv1.1 TLSv1.2;
    	ssl_ciphers         HIGH:!aNULL:!MD5;
    	ssl_prefer_server_ciphers on;

    	ssl_verify_client on;
    	ssl_verify_depth 4; # Allow intermediate CAs
    	ssl_client_certificate /etc/nginx/DoDRoots.crt;

    	add_header Strict-Transport-Security max-age=15768000;
    	
        # Inform the proxyed app who the user who that SSL-terminated
    	add_header X-Subject-DN $ssl_client_s_dn;
    	add_header X-Client-Verified $ssl_client_verify;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";


	    root /www/data;
        index index.html index.htm index.nginx-debian.html;
        return      301 https://localhost:8080$request_uri;

}
